generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Golfer {
  id        String   @id @default(cuid())
  name      String   @unique @default("")
  email     String   @unique @default("")
  following Golfer[] @relation("Following")
  followers Golfer[] @relation("Following")
  rounds    Round[]  @relation("golf_round")
}

model Round {
  round_id   String   @id @default(cuid())
  round_name String   @unique @default("")
  golferId   String
  holeId     String
  hit_data   String
  date       DateTime @default(now())
  golfer     Golfer   @relation("golf_round", fields: [golferId], references: [id])
  hits       Hits[]   @relation("round_strokes")
  hole       GolfHole @relation("round_holes", fields: [holeId], references: [hole_id])

  @@index([golferId])
  @@index([holeId])
}

model GolfCourse {
  course_id String     @id @default(cuid())
  name      String     @unique @default("")
  holes     GolfHole[] @relation("course_holes")
}

model GolfHole {
  hole_id     String     @id @default(cuid())
  hole_number Int
  courseId    String
  par         Int        @default(0)
  course      GolfCourse @relation("course_holes", fields: [courseId], references: [course_id])
  rounds      Round[]    @relation("round_holes")

  @@unique([courseId, hole_number])
  @@index([courseId])
}

model Hits {
  id         String @id @default(cuid())
  stroke     Int
  latitude   Float
  longtitude Float
  roundId    String
  round      Round  @relation("round_strokes", fields: [roundId], references: [round_id])

  @@index([roundId])
}

model Following {
  A String
  B String

  @@unique([A, B], map: "_Following_AB_unique")
  @@index([B], map: "_Following_B_index")
  @@map("_Following")
}
